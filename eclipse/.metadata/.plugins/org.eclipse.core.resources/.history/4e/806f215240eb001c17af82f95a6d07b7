package watersplash;

import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;

import javax.imageio.ImageIO;

import net.minecraft.client.renderer.texture.TextureMap;
import net.minecraft.init.Blocks;
import net.minecraft.util.IIcon;
import net.minecraft.util.ResourceLocation;

public class WaterSplashTextureManager {

private ResourceLocation locationBlocks = TextureMap.locationBlocksTexture;
private ResourceLocation locationParticle = new ResourceLocation(WATERMAIN.MODID+":textures/gui/particles.png");

	public static ResourceLocation getResource() {
		return new ResourceLocation("textures/particle/particles.png");
	}
	

	public static BufferedImage update(IIcon icon) {
	    BufferedImage imageIn = new BufferedImage(icon.getIconWidth(), icon.getIconHeight(), BufferedImage.TYPE_INT_RGB);
	    BufferedImage imageOut = 
	    new BufferedImage(imageIn.getWidth(), imageIn.getHeight(), BufferedImage.TYPE_4BYTE_ABGR);
	    int width = imageIn.getWidth();
	    int height = imageIn.getHeight();
	    int[] imageInPixels = imageIn.getRGB(0, 0, width, height, null, 0, width);
	    int[] imageOutPixels = new int[imageInPixels.length];
	    for (int i = 0; i < imageInPixels.length; i++) {
	        int alpha = (imageInPixels[i] & 0xFF000000) >> 24;
	        int red = (imageInPixels[i] & 0x00FF0000) >> 16;
	        int green = (imageInPixels[i] & 0x0000FF00) >> 8;
	        int blue = (imageInPixels[i] & 0x000000FF) >> 0;

	        // Make any change to the colors.
	        if (  red == 0  ){
	            // bla bla bla
	        } else {
	            // yada yada yada
	        }

	        // At last, store in output array:
	        imageOutPixels[i] = (alpha & 0xFF) << 24
	                        | (red & 0xFF) << 16
	                        | (green & 0xFF) << 8
	                        | (blue & 0xFF);

	    }
	    System.out.println(" "+imageInPixels);
	    imageOut.setRGB(0, 0, width, height, imageOutPixels, 0, width);
	    return imageOut;
	}


	public static void updateTextures() {
		BufferedImage bufferedImage = update(Blocks.water.getIcon(0, 0));
		File outputfile = new File("image.png");
		if(bufferedImage != null)
			try {
				ImageIO.write(bufferedImage, "png", outputfile);
			} catch (IOException e) {
				e.printStackTrace();
			}
		
		;
	}

}
